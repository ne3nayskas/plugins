/**
 * Lampa Track Finder v3
 * --------------------------------------------------------------------------------
 * –¶–µ–π –ø–ª–∞–≥—ñ–Ω –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –ø–æ—à—É–∫—É —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å
 * —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –∞—É–¥—ñ–æ–¥–æ—Ä—ñ–∂–æ–∫ —É —Ä–µ–ª—ñ–∑–∞—Ö, –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —á–µ—Ä–µ–∑ Jacred API.
 * --------------------------------------------------------------------------------
 * –û—Å–Ω–æ–≤–Ω—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ:
 * - –®—É–∫–∞—î –∑–≥–∞–¥–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –¥–æ—Ä—ñ–∂–æ–∫ (Ukr, 2xUkr —ñ —Ç.–¥.) —É –Ω–∞–∑–≤–∞—Ö —Ç–æ—Ä—Ä–µ–Ω—Ç—ñ–≤.
 * - –Ü–≥–Ω–æ—Ä—É—î —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Å—É–±—Ç–∏—Ç—Ä–∏, –∞–Ω–∞–ª—ñ–∑—É—é—á–∏ –ª–∏—à–µ —á–∞—Å—Ç–∏–Ω—É –Ω–∞–∑–≤–∏ –¥–æ —Å–ª–æ–≤–∞ "sub".
 * - –í–∏–∫–æ–Ω—É—î –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–π –ø–æ—à—É–∫ –∑–∞ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ—é —Ç–∞ –ª–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω–æ—é –Ω–∞–∑–≤–æ—é –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –æ—Ö–æ–ø–ª–µ–Ω–Ω—è.
 * - –û–±–∏—Ä–∞—î —Ä–µ–ª—ñ–∑ –∑ –Ω–∞–π–±—ñ–ª—å—à–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑–Ω–∞–π–¥–µ–Ω–∏—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –¥–æ—Ä—ñ–∂–æ–∫.
 * - –ú–∞—î –Ω–∞–¥—ñ–π–Ω–∏–π –¥–≤–æ—Ä—ñ–≤–Ω–µ–≤–∏–π —Ñ—ñ–ª—å—Ç—Ä –¥–ª—è —Ä–æ–∑—Ä—ñ–∑–Ω–µ–Ω–Ω—è —Ñ—ñ–ª—å–º—ñ–≤ —Ç–∞ —Å–µ—Ä—ñ–∞–ª—ñ–≤.
 * - –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –∫–∞—Ä—Ç–æ–∫ (–¥–µ–±–∞—É–Ω—Å–∏–Ω–≥) –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø—Ä–æ–ø—É—Å–∫—ñ–≤ —Ç–∞ –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ.
 * - –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –º—ñ—Ç–∫—É –Ω–∞ –ø–æ—Å—Ç–µ—Ä–∞—Ö (–¥–∏–Ω–∞–º—ñ—á–Ω–æ –∞–¥–∞–ø—Ç—É—î—Ç—å—Å—è –¥–æ –ø—Ä–∏—Å—É—Ç–Ω–æ—Å—Ç—ñ –ø–ª–∞–≥—ñ–Ω–∞ RatingUp).
 * - –ú–∞—î —Å–∏—Å—Ç–µ–º—É –∫–µ—à—É–≤–∞–Ω–Ω—è –¥–ª—è –∑–º–µ–Ω—à–µ–Ω–Ω—è –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø—Ä–∏—à–≤–∏–¥—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏.
 * - –ù–µ –≤–∏–∫–æ–Ω—É—î –ø–æ—à—É–∫ –¥–ª—è –º–∞–π–±—É—Ç–Ω—ñ—Ö —Ä–µ–ª—ñ–∑—ñ–≤ –∞–±–æ —Ä–µ–ª—ñ–∑—ñ–≤ –∑ –Ω–µ–≤—ñ–¥–æ–º–æ—é –¥–∞—Ç–æ—é.
 *
 * --------------------------------------------------------------------------------
 * - üü© –î–û–î–ê–ù–û: –†–æ–∑—à–∏—Ä–µ–Ω–æ 'DISPLAY_MODE'. –¢–µ–ø–µ—Ä 3 –æ–ø—Ü—ñ—ó: 'text', 'flag_count', 'flag_only'.(–ü—Ä–∞–ø–æ—Ä –≤ SVG)
 * - üü© –î–û–î–ê–ù–û: –î–µ—Ç–∞–ª—å–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –¥–ª—è –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π, –±–ª–æ–∫—ñ–≤ —Ç–∞ –∫–ª—é—á–æ–≤–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
 * - üü© –ü–æ–≤–Ω—ñ—Å—Ç—é –ø–µ—Ä–µ—Ä–æ–±–ª–µ–Ω–æ –ª–æ–≥—ñ–∫—É `processListCard` –Ω–∞ —ñ–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω—É.
 * - üü© –ú—ñ—Ç–∫–∏, —â–æ –∑–Ω–∏–∫–∞–ª–∏ –ø—Ä–∏ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É–≤–∞–Ω–Ω—ñ DOM ("–∞–≤—Ç–æ–∑—Ü—ñ–ª–µ–Ω–Ω—è").
 * - üü© "–ü—Ä–∏–º–∞—Ä–Ω—ñ" –º—ñ—Ç–∫–∏ (—Ö–∏–±–Ω–∏–π –∫–µ—à) —Ç–µ–ø–µ—Ä –∫–æ—Ä–µ–∫—Ç–Ω–æ –≤–∏–¥–∞–ª—è—é—Ç—å—Å—è.
 * - üü© –ó–±–µ—Ä–µ–∂–µ–Ω–æ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó (–¥–µ–±–∞—É–Ω—Å, –ø–∞–∫–µ—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞).
 * - üü© –î–æ–¥–∞–Ω–æ —Ä–∞–∑–æ–≤—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∫–µ—à—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ.
 */
(function() {
    'use strict'; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—É–≤–æ—Ä–∏–π —Ä–µ–∂–∏–º –¥–ª—è –∫—Ä–∞—â–æ—ó —è–∫–æ—Å—Ç—ñ –∫–æ–¥—É —Ç–∞ –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫.

    // ===================== –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –ü–õ–ê–ì–Ü–ù–ê (LTF - Lampa Track Finder) =====================
    
    // ‚úÖ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ CSS –¥–ª—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ –≤—ñ–¥–º–∞–ª—å–æ–≤–∫–∏ –ø—Ä–∞–ø–æ—Ä–∞ 
    var ukraineFlagSVG = '<i class="flag-css"></i>';
    

   
    // –ì–æ–ª–æ–≤–Ω–∏–π –æ–±'—î–∫—Ç –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
    var LTF_CONFIG = {
        // --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–µ—à—É ---
        CACHE_VERSION: 4, // ‚ùó –ó–º—ñ–Ω—ñ—Ç—å —Ü–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä. 5), —è–∫—â–æ —Ö–æ—á–µ—Ç–µ –ø—Ä–∏–º—É—Å–æ–≤–æ —Å–∫–∏–Ω—É—Ç–∏ –≤–µ—Å—å –∫–µ—à —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤.
        CACHE_KEY: 'lampa_ukr_tracks_cache', // –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∫–µ—à—É –≤ LocalStorage.
        CACHE_VALID_TIME_MS: 12 * 60 * 60 * 1000, // –ß–∞—Å –∂–∏—Ç—Ç—è –∫–µ—à—É (12 –≥–æ–¥–∏–Ω). –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –≤—ñ–Ω –≤–≤–∞–∂–∞—î—Ç—å—Å—è –Ω–µ–¥—ñ–π—Å–Ω–∏–º.
        CACHE_REFRESH_THRESHOLD_MS: 6 * 60 * 60 * 1000, // –ß–µ—Ä–µ–∑ —Å–∫—ñ–ª—å–∫–∏ —á–∞—Å—É –∫–µ—à –ø–æ—Ç—Ä–µ–±—É—î —Ñ–æ–Ω–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (6 –≥–æ–¥–∏–Ω).

        // --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è ---
        LOGGING_GENERAL: false, // –ó–∞–≥–∞–ª—å–Ω—ñ –ª–æ–≥–∏ (—Å—Ç–∞—Ä—Ç –ø–ª–∞–≥—ñ–Ω–∞, –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –º–µ—Ä–µ–∂—ñ).
        LOGGING_TRACKS: false, // –õ–æ–≥–∏ –ø–æ—à—É–∫—É (—â–æ —à—É–∫–∞—î–º–æ, —â–æ –∑–Ω–∞–π—à–ª–∏, —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è).
        LOGGING_CARDLIST: false, // –õ–æ–≥–∏ –æ–±—Ä–æ–±–∫–∏ –∫–∞—Ä—Ç–æ–∫ (—Å–∫—ñ–ª—å–∫–∏ –∫–∞—Ä—Ç–æ–∫ –≤ –ø–∞—á—Ü—ñ, —Ç–æ—â–æ).

        // --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è API —Ç–∞ –º–µ—Ä–µ–∂—ñ ---
        JACRED_PROTOCOL: 'http://', // –ü—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è API JacRed.
        JACRED_URL: 'jacred.xyz', // –î–æ–º–µ–Ω API JacRed.
        PROXY_LIST: [ // –°–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å—ñ-—Å–µ—Ä–≤–µ—Ä—ñ–≤ –¥–ª—è –æ–±—Ö–æ–¥—É CORS-–æ–±–º–µ–∂–µ–Ω—å.
            'http://api.allorigins.win/raw?url=',
            'http://cors.bwa.workers.dev/'
        ],
        PROXY_TIMEOUT_MS: 3500, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —á–∞—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–∫—Å—ñ (3.5 —Å–µ–∫—É–Ω–¥–∏).
        MAX_PARALLEL_REQUESTS: 10, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–Ω–æ—á–∞—Å–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ API.
        MAX_RETRY_ATTEMPTS: 2, // (–ó–∞—Ä–∞–∑ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è, –∞–ª–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ).

        // --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É ---
        SHOW_TRACKS_FOR_TV_SERIES: true, // –ß–∏ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –º—ñ—Ç–∫–∏ –¥–ª—è —Å–µ—Ä—ñ–∞–ª—ñ–≤ (true –∞–±–æ false).

        // --- ‚úÖ –û–ù–û–í–õ–ï–ù–û: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è ---
        DISPLAY_MODE: 'flag_count', // –†–µ–∂–∏–º –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º—ñ—Ç–∫–∏. –í–∞—Ä—ñ–∞–Ω—Ç–∏:
                                    // 'text': "Ukr" –∞–±–æ "2xUkr"
                                    // 'flag_count': [SVG] –∞–±–æ "2x[SVG]"
                                    // 'flag_only': [SVG] (–∑–∞–≤–∂–¥–∏, —è–∫—â–æ –¥–æ—Ä—ñ–∂–∫–∏ —î)

        // --- –†—É—á–Ω—ñ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –¥–æ—Ä—ñ–∂–æ–∫ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö ID –∫–æ–Ω—Ç–µ–Ω—Ç—É ---
        MANUAL_OVERRIDES: {
            '207703': { track_count: 1 },    //‚úÖ–ü—Ä–∏–º—É—Å–æ–≤–æ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ Ukr –¥–ª—è —Ü—å–æ–≥–æ ID
            '1195518': { track_count: 2 },   //‚úÖ–ü—Ä–∏–º—É—Å–æ–≤–æ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ 2xUkr –¥–ª—è —Ü—å–æ–≥–æ ID
            '21595': { track_count: 2 },     //‚úÖ–ü—Ä–∏–º—É—Å–æ–≤–æ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ 2xUkr –¥–ª—è —Ü—å–æ–≥–æ ID
            '1234821': { track_count: 2 },   //‚úÖ–ü—Ä–∏–º—É—Å–æ–≤–æ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ 2xUkr –¥–ª—è —Ü—å–æ–≥–æ ID
            '933260': { track_count: 3 },    //‚úÖ–ü—Ä–∏–º—É—Å–æ–≤–æ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ 3xUkr –¥–ª—è —Ü—å–æ–≥–æ ID
            '245827': { track_count: 0 }     //‚úÖ–ü—Ä–∏–º—É—Å–æ–≤–æ –Ω–µ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ Ukr –¥–ª—è —Ü—å–æ–≥–æ ID
            /*'–¢—É—Ç ID —Ñ—ñ–ª—å–º—É': { track_count: 0 },*/   // –ü—Ä–∏–∫–ª–∞–¥: –ø—Ä–∏–º—É—Å–æ–≤–æ –ø—Ä–∏—Ö–æ–≤–∞—Ç–∏
        }
        // –ö–Ü–ù–ï–¶–¨ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω—å
    
    };

    // ======== –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ï –°–ö–ò–î–ê–ù–ù–Ø –°–¢–ê–†–û–ì–û –ö–ï–®–£ –ü–†–ò –û–ù–û–í–õ–ï–ù–ù–Ü ========
    // –¶—è IIFE (Immediately Invoked Function Expression) –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ.
    // –í–æ–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –≤ –∫–µ—à—ñ –∑–∞–ø–∏—Å–∏ –≤—ñ–¥ —Å—Ç–∞—Ä–æ—ó –≤–µ—Ä—Å—ñ—ó (–±–µ–∑ –ø—Ä–µ—Ñ—ñ–∫—Å–∞ –≤–µ—Ä—Å—ñ—ó),
    // —ñ —è–∫—â–æ —Ç–∞–∫ - –æ—á–∏—â—É—î –≤–µ—Å—å –∫–µ—à, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤.
    (function resetOldCache() {
        var cache = Lampa.Storage.get(LTF_CONFIG.CACHE_KEY) || {};
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Ö–æ—á –æ–¥–∏–Ω –∫–ª—é—á, —â–æ –ù–ï –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ –ø–æ—Ç–æ—á–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó
        var hasOld = Object.keys(cache).some(k => !k.startsWith(LTF_CONFIG.CACHE_VERSION + '_'));
            if (hasOld) {
            console.log('UA-Finder: –≤–∏—è–≤–ª–µ–Ω–æ —Å—Ç–∞—Ä–∏–π –∫–µ—à, –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ—á–∏—â–µ–Ω–Ω—è...');
            Lampa.Storage.set(LTF_CONFIG.CACHE_KEY, {});
            }
    })();
    
// ===================== –°–¢–ò–õ–Ü CSS =====================
// –¶–µ–π –±–ª–æ–∫ —Å—Ç–≤–æ—Ä—é—î —Ç–∞ –¥–æ–¥–∞—î –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Å—Ç–∏–ª—ñ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º—ñ—Ç–æ–∫.
var styleTracks = "<style id=\"lampa_tracks_styles\">" +
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–∑–∏—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è –¥–ª—è –ø–æ—Å—Ç–µ—Ä–∞.
    // –¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, —â–æ–± .card__tracks –º—ñ–≥ –ø–æ–∑–∏—Ü—ñ–æ–Ω—É–≤–∞—Ç–∏—Å—è –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—ñ–¥–Ω–æ—Å–Ω–æ –Ω—å–æ–≥–æ.
    ".card__view { position: relative; }" +

    // –û—Å–Ω–æ–≤–Ω–∏–π —Å—Ç–∏–ª—å –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –º—ñ—Ç–∫–∏
    ".card__tracks {" +
    " position: absolute !important; " + // –ê–±—Å–æ–ª—é—Ç–Ω–µ –ø–æ–∑–∏—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è
    " right: 0.3em !important; " + // –í—ñ–¥—Å—Ç—É–ø –ø—Ä–∞–≤–æ—Ä—É—á
    " left: auto !important; " + // –°–∫–∏–¥–∞—î–º–æ –ø–æ–∑–∏—Ü—ñ–æ–Ω—É–≤–∞–Ω–Ω—è –∑–ª—ñ–≤–∞
    " top: 0.3em !important; " + // –ü–æ–∑–∏—Ü—ñ—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º (–∫–æ–ª–∏ RatingUp –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π)
    " background: rgba(0,0,0,0.5) !important;" + // –ù–∞–ø—ñ–≤–ø—Ä–æ–∑–æ—Ä–∏–π —á–æ—Ä–Ω–∏–π —Ñ–æ–Ω
    " color: #FFFFFF !important;" + // –ë—ñ–ª–∏–π –∫–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É
    " font-size: 1.3em !important;" + // –†–æ–∑–º—ñ—Ä —à—Ä–∏—Ñ—Ç—É
    " padding: 0.2em 0.5em !important;" + // –í–Ω—É—Ç—Ä—ñ—à–Ω—ñ –≤—ñ–¥—Å—Ç—É–ø–∏
    " border-radius: 1em !important;" + // –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤
    " font-weight: 700 !important;" + // –ñ–∏—Ä–Ω–∏–π —à—Ä–∏—Ñ—Ç
    " z-index: 20 !important;" + // –í–∏—Å–æ–∫–∏–π z-index, —â–æ–± –±—É—Ç–∏ –ø–æ–≤–µ—Ä—Ö —ñ–Ω—à–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    " width: fit-content !important; " + // –®–∏—Ä–∏–Ω–∞ –∑–∞ –≤–º—ñ—Å—Ç–æ–º
    " max-width: calc(100% - 1em) !important; " + // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —à–∏—Ä–∏–Ω–∞
    " overflow: hidden !important;" + // –ü—Ä–∏—Ö–æ–≤—É–≤–∞—Ç–∏ –≤—Å–µ, —â–æ –≤–∏—Ö–æ–¥–∏—Ç—å –∑–∞ –º–µ–∂—ñ
    "}" +
    
    // –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –∫–ª–∞—Å, —è–∫–∏–π –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ,
    // —è–∫—â–æ –ø–ª–∞–≥—ñ–Ω RatingUp –∞–∫—Ç–∏–≤–Ω–∏–π —ñ –ø–µ—Ä–µ–º—ñ—Å—Ç–∏–≤ —Ä–µ–π—Ç–∏–Ω–≥ –≤–≥–æ—Ä—É.
    ".card__tracks.positioned-below-rating {" +
    " top: 1.85em !important; " + // –ó–º—ñ—â—É—î–º–æ –º—ñ—Ç–∫—É –Ω–∏–∂—á–µ —Ä–µ–π—Ç–∏–Ω–≥—É
    "}" +
    
    // –°—Ç–∏–ª—å –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ `div`, —â–æ –º—ñ—Å—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç –∞–±–æ SVG
    ".card__tracks div {" +
    " text-transform: none !important; " + // –ë–µ–∑ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —É –≤–µ–ª–∏–∫—ñ –ª—ñ—Ç–µ—Ä–∏
    " font-family: 'Roboto Condensed', 'Arial Narrow', Arial, sans-serif !important; " + // –®—Ä–∏—Ñ—Ç
    " font-weight: 700 !important; " + // –ñ–∏—Ä–Ω—ñ—Å—Ç—å
    " letter-spacing: 0.1px !important; " + // –ú—ñ–∂–ª—ñ—Ç–µ—Ä–Ω–∞ –≤—ñ–¥—Å—Ç–∞–Ω—å
    " font-size: 1.05em !important; " + // –†–æ–∑–º—ñ—Ä —à—Ä–∏—Ñ—Ç—É
    " color: #FFFFFF !important;" + // –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É
    " padding: 0 !important; " + // –°–∫–∏–¥–∞–Ω–Ω—è –≤—ñ–¥—Å—Ç—É–ø—ñ–≤
    " white-space: nowrap !important;" + // –ó–∞–±–æ—Ä–æ–Ω–∞ –ø–µ—Ä–µ–Ω–æ—Å—É —Ä—è–¥–∫–∞
    " display: flex !important; " + // Flex-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è (–Ω–∞–ø—Ä. "2x" —ñ "[SVG]")
    " align-items: center !important; " + // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–µ –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è
    " gap: 4px !important; " + // –í—ñ–¥—Å—Ç–∞–Ω—å –º—ñ–∂ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ (–º—ñ–∂ "2x" —ñ "[SVG]")
    " text-shadow: 0.5px 0.5px 1px rgba(0,0,0,0.3) !important; " + // –¢—ñ–Ω—å –¥–ª—è —Ç–µ–∫—Å—Ç—É
    "}" +

    /* –°—Ç–∏–ª—ñ CSS –¥–ª—è –ø—Ä–∞–ø–æ—Ä–∞*/
    ".card__tracks .flag-css {" +
    " display: inline-block;" +
    " width: 1.5em;" +
    " height: 0.8em;" +
    " vertical-align: middle;" +
    
    // 1. –ü—Ä–∞–ø–æ—Ä (–±–∞–∑–æ–≤—ñ –∫–æ–ª—å–æ—Ä–∏)
    " background: linear-gradient(to bottom, #0057B7 0%, #0057B7 50%, #FFD700 50%, #FFD700 100%);" +
    
    // 2. –ó–∞–æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è
    " border-radius: 2px;" + 
    " border: none !important;" + // –ì–∞—Ä–∞–Ω—Ç—É—î–º–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—ó —Ä–∞–º–∫–∏
    
    // 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è "–û–±'—î–º–Ω–æ—ó –†–∞–º–∫–∏" —Ç–∞ "3D-–í—Ç–∏—Å–Ω–µ–Ω–Ω—è"
    " box-shadow: " +
        // –ó–æ–≤–Ω—ñ—à–Ω—è —Ç—ñ–Ω—å (1): –°—Ç–≤–æ—Ä—é—î –º'—è–∫–∏–π, –≥—Ä–∞–¥—ñ—î–Ω—Ç–Ω–∏–π –∫–æ–Ω—Ç—É—Ä (—ñ–º—ñ—Ç–∞—Ü—ñ—è –∑–æ–≤–Ω—ñ—à–Ω—å–æ—ó —Ä–∞–º–∫–∏)
        "0 0 2px 0 rgba(0,0,0,0.6), " +
        // –ó–æ–≤–Ω—ñ—à–Ω—è —Ç—ñ–Ω—å (2): –õ–µ–≥–∫–∞, —à–∏—Ä–æ–∫–∞, –Ω–∞–ø—ñ–≤–ø—Ä–æ–∑–æ—Ä–∞ —Ç—ñ–Ω—å –¥–ª—è "–≥–ª–∏–±–∏–Ω–∏"
        "0 0 1px 1px rgba(0,0,0,0.2), " + 
        
        // –í–Ω—É—Ç—Ä—ñ—à–Ω—è —Ç—ñ–Ω—å (3, 4): –°—Ç–≤–æ—Ä—é—é—Ç—å –µ—Ñ–µ–∫—Ç –∑–∞–≥–ª–∏–±–ª–µ–Ω–Ω—è (—è–∫ —É –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–º—É –∫—Ä–æ—Ü—ñ)
        "inset 0px 1px 0px 0px #004593, " + // –¢–µ–º–Ω–æ-—Å–∏–Ω—ñ–π (–≤–µ—Ä—Ö–Ω—ñ–π –∫—Ä–∞–π)
        "inset 0px -1px 0px 0px #D0A800;" + // –¢–µ–º–Ω–æ-–∂–æ–≤—Ç–∏–π (–Ω–∏–∂–Ω—ñ–π –∫—Ä–∞–π)
    
    "}" +
    
    "}" +

    "</style>";
// –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –≤ DOM –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –ø–ª–∞–≥—ñ–Ω–∞.
Lampa.Template.add('lampa_tracks_css', styleTracks);
$('body').append(Lampa.Template.get('lampa_tracks_css', {}, true));

    // ===================== –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –ß–ï–†–ì–û–Æ –ó–ê–ü–ò–¢–Ü–í =====================
    // –¶–µ —Å–∏—Å—Ç–µ–º–∞, —â–æ –∑–∞–ø–æ–±—ñ–≥–∞—î "–∑–∞–±–∏–≤–∞–Ω–Ω—é" –º–µ—Ä–µ–∂—ñ.
    // –í—Å—ñ –∑–∞–ø–∏—Ç–∏ –¥–æ API —Å—Ç–∞—é—Ç—å —É —á–µ—Ä–≥—É —ñ –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è –Ω–µ–≤–µ–ª–∏–∫–∏–º–∏ –ø–∞—á–∫–∞–º–∏.

    var requestQueue = []; // –ú–∞—Å–∏–≤, –¥–µ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ –ø–æ—à—É–∫.
    var activeRequests = 0; // –õ—ñ—á–∏–ª—å–Ω–∏–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö (—Ç–∏—Ö, —â–æ –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è –∑–∞—Ä–∞–∑) –∑–∞–ø–∏—Ç—ñ–≤.
    var networkHealth = 1.0; // –ü–æ–∫–∞–∑–Ω–∏–∫ "–∑–¥–æ—Ä–æ–≤'—è" –º–µ—Ä–µ–∂—ñ (1.0 = –¥–æ–±—Ä–µ, 0.3 = –ø–æ–≥–∞–Ω–æ).

    /**
     * –î–æ–¥–∞—î –∑–∞–≤–¥–∞–Ω–Ω—è (—Ñ—É–Ω–∫—Ü—ñ—é –ø–æ—à—É–∫—É) –¥–æ —á–µ—Ä–≥–∏.
     * @param {function} fn - –§—É–Ω–∫—Ü—ñ—è, —è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ–Ω–∞—Ç–∏.
     */
    function enqueueTask(fn) {
        requestQueue.push(fn); // –î–æ–¥–∞—Ç–∏ –≤ –∫—ñ–Ω–µ—Ü—å —á–µ—Ä–≥–∏.
        processQueue(); // –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –æ–±—Ä–æ–±–∫—É.
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î —á–µ—Ä–≥—É, –∑–∞–ø—É—Å–∫–∞—é—á–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –ø–æ –æ–¥–Ω–æ–º—É, –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –ª—ñ–º—ñ—Ç—É.
     */
    function processQueue() {
        // –ê–¥–∞–ø—Ç–∏–≤–Ω–∏–π –ª—ñ–º—ñ—Ç: –±–∞–∑—É—î—Ç—å—Å—è –Ω–∞ MAX_PARALLEL_REQUESTS, –∞–ª–µ –∑–º–µ–Ω—à—É—î—Ç—å—Å—è,
        // —è–∫—â–æ –º–µ—Ä–µ–∂–∞ "—Ö–≤–æ—Ä—ñ—î" (–Ω–∞–ø—Ä. –ø—Ä–æ–∫—Å—ñ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å).
        var adaptiveLimit = Math.max(3, Math.min(LTF_CONFIG.MAX_PARALLEL_REQUESTS, Math.floor(LTF_CONFIG.MAX_PARALLEL_REQUESTS * networkHealth)));
        
        // –ù–µ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–∏–π –ª—ñ–º—ñ—Ç.
        if (activeRequests >= adaptiveLimit) return; 
        
        var task = requestQueue.shift(); // –í–∑—è—Ç–∏ –ø–µ—Ä—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è –∑ —á–µ—Ä–≥–∏.
        if (!task) return; // –Ø–∫—â–æ —á–µ—Ä–≥–∞ –ø–æ—Ä–æ–∂–Ω—è, –≤–∏–π—Ç–∏.

        activeRequests++; // –ó–±—ñ–ª—å—à–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤.
        
        try {
            // –í–∏–∫–æ–Ω–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è.
            // –í–∞–∂–ª–∏–≤–æ: –º–∏ –ø–µ—Ä–µ–¥–∞—î–º–æ –≤ –∑–∞–≤–¥–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—é `onTaskDone`,
            // —è–∫—É —Ü–µ –∑–∞–≤–¥–∞–Ω–Ω—è *–∑–æ–±–æ–≤'—è–∑–∞–Ω–µ* –≤–∏–∫–ª–∏–∫–∞—Ç–∏, –∫–æ–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è.
            task(function onTaskDone() {
                activeRequests--; // –ó–º–µ–Ω—à–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫.
                // –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –æ–±—Ä–æ–±–∫—É –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (—á–µ—Ä–µ–∑ 0ms).
                setTimeout(processQueue, 0); 
            });
        } catch (e) {
            console.error("LTF-LOG", "–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è –∑ —á–µ—Ä–≥–∏:", e);
            activeRequests--; // –í—Å–µ –æ–¥–Ω–æ –∑–º–µ–Ω—à–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ.
            setTimeout(processQueue, 0);
        }
    }

    /**
     * –û–Ω–æ–≤–ª—é—î –ø–æ–∫–∞–∑–Ω–∏–∫ "–∑–¥–æ—Ä–æ–≤'—è –º–µ—Ä–µ–∂—ñ" (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ 'fetchWithProxy').
     * @param {boolean} success - –ß–∏ –±—É–≤ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∑–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–∏–º.
     */
    function updateNetworkHealth(success) {
        if (success) {
            // –ü–æ–∫—Ä–∞—â–∏—Ç–∏ –∑–¥–æ—Ä–æ–≤'—è –ø—Ä–∏ —É—Å–ø—ñ—Ö—É (–¥–æ –º–∞–∫—Å–∏–º—É–º—É 1.0)
            networkHealth = Math.min(1.0, networkHealth + 0.1); 
        } else {
            // –ü–æ–≥—ñ—Ä—à–∏—Ç–∏ –∑–¥–æ—Ä–æ–≤'—è –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ (–¥–æ –º—ñ–Ω—ñ–º—É–º—É 0.3)
            networkHealth = Math.max(0.3, networkHealth - 0.2); 
        }
        if (LTF_CONFIG.LOGGING_GENERAL) console.log("LTF-LOG", "–û–Ω–æ–≤–ª–µ–Ω–æ –∑–¥–æ—Ä–æ–≤'—è –º–µ—Ä–µ–∂—ñ:", networkHealth);
    }

    // ===================== –ú–ï–†–ï–ñ–ï–í–Ü –§–£–ù–ö–¶–Ü–á =====================
    /**
     * –í–∏–∫–æ–Ω—É—î –º–µ—Ä–µ–∂–µ–≤–∏–π –∑–∞–ø–∏—Ç —á–µ—Ä–µ–∑ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å—ñ-—Å–µ—Ä–≤–µ—Ä—ñ–≤, —â–æ–± –æ–±—ñ–π—Ç–∏ CORS.
     * –ú–∞—î –ª–æ–≥—ñ–∫—É "–≤—ñ–¥–º–æ–≤–∏" (fallback) - —è–∫—â–æ –æ–¥–∏–Ω –ø—Ä–æ–∫—Å—ñ –Ω–µ –ø—Ä–∞—Ü—é—î, –ø—Ä–æ–±—É—î —ñ–Ω—à–∏–π.
     * @param {string} url - URL-–∞–¥—Ä–µ—Å–∞ –¥–ª—è –∑–∞–ø–∏—Ç—É.
     * @param {string} cardId - ID –∫–∞—Ä—Ç–∫–∏ –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è.
     * @param {function} callback - –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º `(error, data)`.
     */
    function fetchWithProxy(url, cardId, callback) {
        var currentProxyIndex = 0; // –ü–æ—á–∏–Ω–∞—î–º–æ –∑ –ø–µ—Ä—à–æ–≥–æ –ø—Ä–æ–∫—Å—ñ.
        var callbackCalled = false; // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–¥–≤—ñ–π–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É callback.

        function tryNextProxy() {
            // –Ø–∫—â–æ –≤—Å—ñ –ø—Ä–æ–∫—Å—ñ –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∏.
            if (currentProxyIndex >= LTF_CONFIG.PROXY_LIST.length) {
                if (!callbackCalled) {
                    callbackCalled = true;
                    updateNetworkHealth(false); // ‚ùó –ü–æ–≥—ñ—Ä—à—É—î–º–æ –∑–¥–æ—Ä–æ–≤'—è –º–µ—Ä–µ–∂—ñ
                    callback(new Error('–í—Å—ñ –ø—Ä–æ–∫—Å—ñ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏ –¥–ª—è ' + url));
                }
                return;
            }
            // –§–æ—Ä–º—É—î–º–æ URL —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å—ñ.
            var proxyUrl = LTF_CONFIG.PROXY_LIST[currentProxyIndex] + encodeURIComponent(url);
            
            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø–∏—Ç—É. –Ø–∫—â–æ –ø—Ä–æ–∫—Å—ñ "–≤–∏—Å–∏—Ç—å", –º–∏ –ø–µ—Ä–µ–π–¥–µ–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ.
            var timeoutId = setTimeout(function() {
                if (!callbackCalled) {
                    currentProxyIndex++; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—Ä–æ–∫—Å—ñ.
                    tryNextProxy();
                }
            }, LTF_CONFIG.PROXY_TIMEOUT_MS);

            // –í–∏–∫–æ–Ω—É—î–º–æ –∑–∞–ø–∏—Ç.
            fetch(proxyUrl)
                .then(function(response) {
                    clearTimeout(timeoutId); // –ü—Ä–∏–±–∏—Ä–∞—î–º–æ —Ç–∞–π–º–∞—É—Ç.
                    if (!response.ok) throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–æ–∫—Å—ñ: ' + response.status);
                    return response.text(); // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ —è–∫ —Ç–µ–∫—Å—Ç
                })
                .then(function(data) {
                    if (!callbackCalled) {
                        callbackCalled = true;
                        updateNetworkHealth(true); // ‚úÖ –ü–æ–∫—Ä–∞—â—É—î–º–æ –∑–¥–æ—Ä–æ–≤'—è –º–µ—Ä–µ–∂—ñ
                        callback(null, data); // –£—Å–ø—ñ—Ö, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ.
                    }
                })
                .catch(function(error) {
                    // –Ø–∫—â–æ —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ (–ø—Ä–æ–∫—Å—ñ –≤–ø–∞–≤, 404, 500...)
                    clearTimeout(timeoutId);
                    if (!callbackCalled) {
                        currentProxyIndex++; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—Ä–æ–∫—Å—ñ.
                        tryNextProxy();
                    }
                });
        }
        tryNextProxy(); // –ü–æ—á–∏–Ω–∞—î–º–æ —Å–ø—Ä–æ–±–∏.
    }
    
    // ===================== –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á =====================
    /**
     * –í–∏–∑–Ω–∞—á–∞—î —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç—É (—Ñ—ñ–ª—å–º/—Å–µ—Ä—ñ–∞–ª) –∑ –¥–∞–Ω–∏—Ö –∫–∞—Ä—Ç–∫–∏ Lampa.
     * @param {object} cardData - –î–∞–Ω—ñ –∫–∞—Ä—Ç–∫–∏ Lampa.
     * @returns {string} - 'movie' –∞–±–æ 'tv'.
     */
    function getCardType(cardData) {
        var type = cardData.media_type || cardData.type;
        if (type === 'movie' || type === 'tv') return type;
        // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –µ–≤—Ä–∏—Å—Ç–∏–∫–∞: —è–∫—â–æ —î 'name', —Ü–µ, –π–º–æ–≤—ñ—Ä–Ω–æ, —Å–µ—Ä—ñ–∞–ª
        return cardData.name || cardData.original_name ? 'tv' : 'movie';
    }

    // ===================== –û–°–ù–û–í–ù–ê –õ–û–ì–Ü–ö–ê –ü–Ü–î–†–ê–•–£–ù–ö–£ –î–û–†–Ü–ñ–û–ö =====================
    /**
     * –†–∞—Ö—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –¥–æ—Ä—ñ–∂–æ–∫ —É –Ω–∞–∑–≤—ñ, —ñ–≥–Ω–æ—Ä—É—é—á–∏ —Å—É–±—Ç–∏—Ç—Ä–∏.
     * @param {string} title - –ù–∞–∑–≤–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–∞.
     * @returns {number} - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞–π–¥–µ–Ω–∏—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –∞—É–¥—ñ–æ–¥–æ—Ä—ñ–∂–æ–∫.
     */
    function countUkrainianTracks(title) {
        if (!title) return 0; // –Ø–∫—â–æ –Ω–∞–∑–≤–∞ –ø–æ—Ä–æ–∂–Ω—è, –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ 0.
        let cleanTitle = title.toLowerCase(); // –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –≤ –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä.
        
        // ‚ùó –í–∞–∂–ª–∏–≤–∏–π –∫—Ä–æ–∫: –Ü–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è —Å—É–±—Ç–∏—Ç—Ä—ñ–≤.
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–æ–∑–∏—Ü—ñ—é —Å–ª–æ–≤–∞ "sub" (—Å—É–±—Ç–∏—Ç—Ä–∏).
        const subsIndex = cleanTitle.indexOf('sub');
        // –Ø–∫—â–æ "sub" –∑–Ω–∞–π–¥–µ–Ω–æ, –æ–±—Ä—ñ–∑–∞—î–º–æ —Ä—è–¥–æ–∫, —â–æ–± –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —á–∞—Å—Ç–∏–Ω—É –î–û —Å—É–±—Ç–∏—Ç—Ä—ñ–≤.
        if (subsIndex !== -1) {
            cleanTitle = cleanTitle.substring(0, subsIndex);
        }

        // –ö—Ä–æ–∫ 1: –®—É–∫–∞—î–º–æ –º—É–ª—å—Ç–∏-–¥–æ—Ä—ñ–∂–∫–∏ —Ñ–æ—Ä–º–∞—Ç—É "NxUkr" (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "3xUkr").
        const multiTrackMatch = cleanTitle.match(/(\d+)x\s*ukr/);
        if (multiTrackMatch && multiTrackMatch[1]) {
            // –Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —á–∏—Å–ª–æ, —è–∫–µ —Å—Ç–æ—ó—Ç—å –ø–µ—Ä–µ–¥ "xUkr".
            return parseInt(multiTrackMatch[1], 10);
        }

        // –ö—Ä–æ–∫ 2: –Ø–∫—â–æ –º—É–ª—å—Ç–∏-–¥–æ—Ä—ñ–∂–æ–∫ –Ω–µ–º–∞—î, —à—É–∫–∞—î–º–æ –æ–¥–∏–Ω–æ—á–Ω—ñ –∑–≥–∞–¥–∫–∏ "ukr".
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ \b (–≥—Ä–∞–Ω–∏—Ü—è —Å–ª–æ–≤–∞), —â–æ–± –Ω–µ –∑–Ω–∞–π—Ç–∏ "ukr" –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —ñ–Ω—à–∏—Ö —Å–ª—ñ–≤.
        const singleTrackMatches = cleanTitle.match(/\bukr\b/g);
        if (singleTrackMatches) {
            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞–π–¥–µ–Ω–∏—Ö –∑–±—ñ–≥—ñ–≤ (–∑–∞–∑–≤–∏—á–∞–π 1).
            return singleTrackMatches.length;
        }

        // –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ 0.
        return 0;
    }

    /*
     * –§–æ—Ä–º–∞—Ç—É—î —Ç–µ–∫—Å—Ç –º—ñ—Ç–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–æ—Ä—ñ–∂–æ–∫ —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è DISPLAY_MODE.
     * @param {number} count - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ—Ä—ñ–∂–æ–∫.
     * @returns {string|null} - HTML-—Ä—è–¥–æ–∫ –¥–ª—è –º—ñ—Ç–∫–∏ –∞–±–æ null.
     */
    function formatTrackLabel(count) {
        if (!count || count === 0) return null; // –ù–µ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –º—ñ—Ç–∫—É, —è–∫—â–æ –¥–æ—Ä—ñ–∂–æ–∫ 0.

        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ 'switch' –¥–ª—è —á–∏—Å—Ç–æ—ó –æ–±—Ä–æ–±–∫–∏ —Ç—Ä—å–æ—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤
        switch (LTF_CONFIG.DISPLAY_MODE) {
            
            case 'flag_only':
                // 1. –¢—ñ–ª—å–∫–∏ –ø—Ä–∞–ø–æ—Ä (–∑–∞–≤–∂–¥–∏, —è–∫—â–æ count > 0)
                return ukraineFlagSVG; // –ü–æ–≤–µ—Ä–Ω–µ [SVG]
            
            case 'flag_count':
                // 2. –ü—Ä–∞–ø–æ—Ä –∑ –ª—ñ—á–∏–ª—å–Ω–∏–∫–æ–º
                if (count === 1) return ukraineFlagSVG; // –ü–æ–≤–µ—Ä–Ω–µ [SVG]
                return `${count}x${ukraineFlagSVG}`; // –ü–æ–≤–µ—Ä–Ω–µ '2x[SVG]'
            
            case 'text':
            default:
                // 3. –¢–µ–∫—Å—Ç (—ñ —è–∫ –≤–∞—Ä—ñ–∞–Ω—Ç –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
                if (count === 1) return 'Ukr'; // –ü–æ–≤–µ—Ä–Ω–µ 'Ukr'
                return `${count}xUkr`; // –ü–æ–≤–µ—Ä–Ω–µ '2xUkr'
        }
    }

    // ===================== –ü–û–®–£–ö –ù–ê JACRED =====================
    /**
     * –ó–Ω–∞—Ö–æ–¥–∏—Ç—å –Ω–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–ª—ñ–∑ –∑–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –¥–æ—Ä—ñ–∂–æ–∫.
     * –¶—è —Ñ—É–Ω–∫—Ü—ñ—è —Å—Ç–∞—î –≤ —á–µ—Ä–≥—É 'enqueueTask'.
     * @param {object} normalizedCard - –ù–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –∫–∞—Ä—Ç–∫–∏.
     * @param {string} cardId - ID –∫–∞—Ä—Ç–∫–∏.
     * @param {function} callback - –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.
     */
    function getBestReleaseWithUkr(normalizedCard, cardId, callback) {
        // 'done' - —Ü–µ —Ñ—É–Ω–∫—Ü—ñ—è onTaskDone –∑ 'processQueue',
        // —è–∫—É –º–∏ *–º—É—Å–∏–º–æ* –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –≤ –∫—ñ–Ω—Ü—ñ, —â–æ–± —á–µ—Ä–≥–∞ –ø—Ä–æ–¥–æ–≤–∂–∏–ª–∞—Å—è.
        enqueueTask(function(done) {

            // --- –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (Pre-flight checks) ---
            // –Ø–∫—â–æ –¥–∞—Ç–∞ –≤—ñ–¥—Å—É—Ç–Ω—è –∞–±–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ ‚Äî –Ω–µ –∑–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—à—É–∫
            if (!normalizedCard.release_date || normalizedCard.release_date.toLowerCase().includes('–Ω–µ–≤—ñ–¥–æ–º–æ') || isNaN(new Date(normalizedCard.release_date).getTime())) {
                callback(null); // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ "–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
                done(); // ‚ùó –ó–∞–≤–µ—Ä—à—É—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è –≤ —á–µ—Ä–∑—ñ
                return;
            }
            
            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Ä–µ–ª—ñ–∑ —â–µ –Ω–µ –≤–∏–π—à–æ–≤.
            var releaseDate = normalizedCard.release_date ? new Date(normalizedCard.release_date) : null;
            if (releaseDate && releaseDate.getTime() > Date.now()) {
                callback(null);
                done();
                return;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ç–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ —Ä–æ–∫—É.
            var year = '';
            if (normalizedCard.release_date && normalizedCard.release_date.length >= 4) {
                year = normalizedCard.release_date.substring(0, 4);
            }
            if (!year || isNaN(parseInt(year, 10))) {
                callback(null);
                done();
                return;
            }
            var searchYearNum = parseInt(year, 10);
            
            /**
             * –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è: –≤–∏—Ç—è–≥—É—î —Ä—ñ–∫ –∑ –Ω–∞–∑–≤–∏ —Ç–æ—Ä—Ä–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä. "–§—ñ–ª—å–º (2023)").
             */
            function extractYearFromTitle(title) {
                var regex = /(?:^|[^\d])(\d{4})(?:[^\d]|$)/g;
                var match, lastYear = 0;
                var currentYear = new Date().getFullYear();
                while ((match = regex.exec(title)) !== null) {
                    var extractedYear = parseInt(match[1], 10);
                    // –û–±–º–µ–∂—É—î–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä—ñ–∫ –ø–æ—Ç–æ—á–Ω–∏–º + 2
                    if (extractedYear >= 1900 && extractedYear <= currentYear + 2) { 
                        lastYear = extractedYear;
                    }
                }
                return lastYear;
            }

            /**
             * –í–Ω—É—Ç—Ä—ñ—à–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–¥–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É –¥–æ API JacRed.
             */
            function searchJacredApi(searchTitle, searchYear, apiCallback) {
                var userId = Lampa.Storage.get('lampac_unic_id', '');
                var apiUrl = LTF_CONFIG.JACRED_PROTOCOL + LTF_CONFIG.JACRED_URL + '/api/v1.0/torrents?search=' +
                    encodeURIComponent(searchTitle) +
                    '&year=' + searchYear +
                    '&uid=' + userId;
                
                // –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å—ñ
                fetchWithProxy(apiUrl, cardId, function(error, responseText) {
                    if (error || !responseText) {
                        apiCallback(null); // –ü–æ–º–∏–ª–∫–∞, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ "–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
                        return;
                    }
                    try {
                        // –ü–∞—Ä—Å–∏–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
                        var torrents = JSON.parse(responseText);
                        if (!Array.isArray(torrents) || torrents.length === 0) {
                            apiCallback(null); // –¢–æ—Ä—Ä–µ–Ω—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
                            return;
                        }

                        let bestTrackCount = 0; // –ù–∞–π–∫—Ä–∞—â–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ—Ä—ñ–∂–æ–∫, —è–∫—É –º–∏ –∑–Ω–∞–π—à–ª–∏
                        let bestFoundTorrent = null; // –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –Ω–∞–π–∫—Ä–∞—â–∏–π —Ç–æ—Ä—Ä–µ–Ω—Ç

                        // –û–±—Ö–æ–¥–∏–º–æ –≤—Å—ñ –∑–Ω–∞–π–¥–µ–Ω—ñ —Ç–æ—Ä—Ä–µ–Ω—Ç–∏
                        for (let i = 0; i < torrents.length; i++) {
                            const currentTorrent = torrents[i];
                            const torrentTitle = currentTorrent.title.toLowerCase();

                            // --- –î–í–û–†–Ü–í–ù–ï–í–ò–ô –§–Ü–õ–¨–¢–† "–§–Ü–õ–¨–ú/–°–ï–†–Ü–ê–õ" ---
                            // –¶–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–ª–∏–≤–æ, —â–æ–± —Ñ—ñ–ª—å–º –Ω–µ –ø—ñ–¥—Ö–æ–ø–∏–≤ –¥–æ—Ä—ñ–∂–∫—É –≤—ñ–¥ —Å–µ—Ä—ñ–∞–ª—É
                            // –∑ —Ç–∞–∫–æ—é –∂ –Ω–∞–∑–≤–æ—é (—ñ –Ω–∞–≤–ø–∞–∫–∏).
                            
                            // –†—ñ–≤–µ–Ω—å 2: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª–æ–≤–∞—Ö —É –Ω–∞–∑–≤—ñ
                            const isSeriesTorrent = /(—Å–µ–∑–æ–Ω|season|s\d{1,2}|—Å–µ—Ä–∏–∏|—Å–µ—Ä—ñ—ó|episodes|–µ–ø—ñ–∑–æ–¥|\d{1,2}\s*–∏–∑\s*\d{1,2}|\d+√ó\d+)/.test(torrentTitle);
                            
                            // –Ø–∫—â–æ –∫–∞—Ä—Ç–∫–∞ - –°–ï–†–Ü–ê–õ, –∞ –≤ —Ç–æ—Ä—Ä–µ–Ω—Ç—ñ –ù–ï–ú–ê–Ñ –æ–∑–Ω–∞–∫ —Å–µ—Ä—ñ–∞–ª—É -> –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
                            if (normalizedCard.type === 'tv' && !isSeriesTorrent) {
                                if (LTF_CONFIG.LOGGING_TRACKS) console.log(`LTF-LOG [${cardId}]: –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ (—Å—Ö–æ–∂–∏–π –Ω–∞ —Ñ—ñ–ª—å–º –¥–ª—è –∫–∞—Ä—Ç–∫–∏ —Å–µ—Ä—ñ–∞–ª—É):`, currentTorrent.title);
                                continue; 
                            }
                            // –Ø–∫—â–æ –∫–∞—Ä—Ç–∫–∞ - –§–Ü–õ–¨–ú, –∞ –≤ —Ç–æ—Ä—Ä–µ–Ω—Ç—ñ –Ñ –æ–∑–Ω–∞–∫–∏ —Å–µ—Ä—ñ–∞–ª—É -> –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
                            if (normalizedCard.type === 'movie' && isSeriesTorrent) {
                                if (LTF_CONFIG.LOGGING_TRACKS) console.log(`LTF-LOG [${cardId}]: –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ (—Å—Ö–æ–∂–∏–π –Ω–∞ —Å–µ—Ä—ñ–∞–ª –¥–ª—è –∫–∞—Ä—Ç–∫–∏ —Ñ—ñ–ª—å–º—É):`, currentTorrent.title);
                                continue;
                            }
                            
                            // –†—ñ–≤–µ–Ω—å 3: –î–æ–¥–∞—Ç–∫–æ–≤–∞ (—Å—É–≤–æ—Ä—ñ—à–∞) –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–ª—è –§–Ü–õ–¨–ú–Ü–í
                            if (normalizedCard.type === 'movie') {
                                const hasStrongSeriesIndicators = /(—Å–µ–∑–æ–Ω|season|s\d|—Å–µ—Ä—ñ—ó|episodes|–µ–ø—ñ–∑–æ–¥|\d+√ó\d+)/i.test(torrentTitle);
                                if (hasStrongSeriesIndicators) {
                                    if (LTF_CONFIG.LOGGING_TRACKS) console.log(`LTF-LOG [${cardId}]: –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ (—á—ñ—Ç–∫—ñ –æ–∑–Ω–∞–∫–∏ —Å–µ—Ä—ñ–∞–ª—É –¥–ª—è –∫–∞—Ä—Ç–∫–∏ —Ñ—ñ–ª—å–º—É):`, currentTorrent.title);
                                    continue;
                                }
                            }
                            
                            // --- –§–Ü–õ–¨–¢–† –ó–ê –†–û–ö–û–ú ---
                            // –ë–µ—Ä–µ–º–æ —Ä—ñ–∫ –∑ –Ω–∞–∑–≤–∏ —Ç–æ—Ä—Ä–µ–Ω—Ç–∞, –∞–±–æ (—è–∫—â–æ —Ç–∞–º –Ω–µ–º–∞—î) –∑ –ø–æ–ª—è 'relased'
                            var parsedYear = extractYearFromTitle(currentTorrent.title) || parseInt(currentTorrent.relased, 10);
                            var yearDifference = Math.abs(parsedYear - searchYearNum);

                            // --- –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –ì–ù–£–ß–ö–û–°–¢–Ü –ü–û–®–£–ö–£ –ó–ê –†–û–ö–û–ú ---                            
                            // ‚úÖ–¢—É—Ç –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏ –ø—Ä–∏–ø—É—Å—Ç–∏–º—É —Ä—ñ–∑–Ω–∏—Ü—é —É —Ä–æ–∫–∞—Ö.
                            // > 0 : –¢—ñ–ª—å–∫–∏ —Ç–æ—á–Ω–∏–π –∑–±—ñ–≥ —Ä–æ–∫—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ç–æ—á–Ω—ñ—Å—Ç—å, –∞–ª–µ –º–æ–∂–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç–∏ —Ä–µ–ª—ñ–∑–∏ –Ω–∞ –º–µ–∂—ñ —Ä–æ–∫—ñ–≤.
                            // > 1 : –î–æ–∑–≤–æ–ª—è—î —Ä—ñ–∑–Ω–∏—Ü—é –≤ 1 —Ä—ñ–∫. –†–ï–ö–û–ú–ï–ù–î–û–í–ê–ù–û –¥–ª—è —Å–µ—Ä—ñ–∞–ª—ñ–≤ —Ç–∞ —Ñ—ñ–ª—å–º—ñ–≤ –Ω–∞ –º–µ–∂—ñ —Ä–æ–∫—ñ–≤.
                    
                            if (parsedYear > 1900 && yearDifference > 0) { //(—Ç—ñ–ª—å–∫–∏ —Ç–æ—á–Ω–∏–π –∑–±—ñ–≥)
                                if (LTF_CONFIG.LOGGING_TRACKS) console.log(`LTF-LOG [${cardId}]: –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ (—Ä—ñ–∫ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—î: ${parsedYear} vs ${searchYearNum}):`, currentTorrent.title);
                                continue;
                            }
                            
                            // --- –ü–Ü–î–†–ê–•–£–ù–û–ö –î–û–†–Ü–ñ–û–ö ---
                            // –†–∞—Ö—É—î–º–æ –¥–æ—Ä—ñ–∂–∫–∏ –≤ "—á–∏—Å—Ç—ñ–π" –Ω–∞–∑–≤—ñ (–±–µ–∑ —Å—É–±—Ç–∏—Ç—Ä—ñ–≤)
                            const currentTrackCount = countUkrainianTracks(currentTorrent.title);
                            
                            // –û–Ω–æ–≤–ª—é—î–º–æ –Ω–∞—à "–Ω–∞–π–∫—Ä–∞—â–∏–π" —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                            if (currentTrackCount > bestTrackCount) {
                                bestTrackCount = currentTrackCount;
                                bestFoundTorrent = currentTorrent;
                            } 
                            // (–û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ—Ä—ñ–∂–æ–∫ –æ–¥–Ω–∞–∫–æ–≤–∞, –±–µ—Ä–µ–º–æ —Ç–æ–π,
                            // —É —è–∫–æ–≥–æ –¥–æ–≤—à–∞ –Ω–∞–∑–≤–∞ (—á–∞—Å—Ç–æ —Ü–µ –ø–æ–≤–Ω—ñ—à–∞ –Ω–∞–∑–≤–∞ —Ä–µ–ª—ñ–∑—É).
                            else if (currentTrackCount === bestTrackCount && bestTrackCount > 0 && bestFoundTorrent && currentTorrent.title.length > bestFoundTorrent.title.length) {
                                bestFoundTorrent = currentTorrent;
                            }
                        } // –ö—ñ–Ω–µ—Ü—å —Ü–∏–∫–ª—É for

                        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        if (bestFoundTorrent) {
                            apiCallback({ track_count: bestTrackCount });
                        } else {
                            apiCallback(null); // –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ
                        }
                    } catch (e) {
                        apiCallback(null); // –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É JSON
                    }
                });
            } // –ö—ñ–Ω–µ—Ü—å searchJacredApi

            // --- –õ–û–ì–Ü–ö–ê –ü–ê–†–ê–õ–ï–õ–¨–ù–û–ì–û –ü–û–®–£–ö–£ ---
            // –®—É–∫–∞—î–º–æ –æ–¥–Ω–æ—á–∞—Å–Ω–æ –∑–∞ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ—é —Ç–∞ –ª–æ–∫–∞–ª—ñ–∑–æ–≤–∞–Ω–æ—é –Ω–∞–∑–≤–æ—é.
            // –¶–µ –ø—ñ–¥–≤–∏—â—É—î —à–∞–Ω—Å –∑–Ω–∞–π—Ç–∏ —Ä–µ–ª—ñ–∑.
            const titlesToSearch = [ normalizedCard.original_title, normalizedCard.title ];
            const uniqueTitles = [...new Set(titlesToSearch)].filter(Boolean); // –í–∏–¥–∞–ª—è—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏ —Ç–∞ –ø–æ—Ä–æ–∂–Ω—ñ —Ä—è–¥–∫–∏
            
            if (LTF_CONFIG.LOGGING_TRACKS) console.log('LTF-LOG', `[${cardId}] –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–∞–º–∏:`, uniqueTitles);
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ "–ø—Ä–æ–º—ñ—Å—ñ–≤" - –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –∫–æ–∂–Ω—É –Ω–∞–∑–≤—É
            const searchPromises = uniqueTitles.map(title => {
                return new Promise(resolve => {
                    searchJacredApi(title, year, resolve); // 'resolve' - —Ü–µ 'apiCallback'
                });
            });

            // –ß–µ–∫–∞—î–º–æ, –¥–æ–∫–∏ –í–°–Ü –ø–æ—à—É–∫–∏ –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è
            Promise.all(searchPromises).then(results => {
                // results - —Ü–µ –º–∞—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤, –Ω–∞–ø—Ä. [ {track_count: 1}, null, {track_count: 2} ]
                
                let bestOverallResult = null;
                let maxTrackCount = 0;
                
                // –û–±–∏—Ä–∞—î–º–æ –Ω–∞–π–∫—Ä–∞—â–∏–π –∑ —É—Å—ñ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
                results.forEach(result => {
                    if (!result || !result.track_count) return;
                    if (result.track_count > maxTrackCount) {
                        maxTrackCount = result.track_count;
                        bestOverallResult = result;
                    }
                });
                
                if (LTF_CONFIG.LOGGING_TRACKS) console.log('LTF-LOG', `[${cardId}] –ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑ —É—Å—ñ—Ö –ø–æ—à—É–∫—ñ–≤:`, bestOverallResult);
                
                callback(bestOverallResult); // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π –Ω–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                done(); // ‚ùó –°–∏–≥–Ω–∞–ª —á–µ—Ä–∑—ñ, —â–æ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ.
            });
        });
    }

    // ===================== –†–û–ë–û–¢–ê –ó –ö–ï–®–ï–ú =====================
    /**
     * –û—Ç—Ä–∏–º—É—î –¥–∞–Ω—ñ –∑ –∫–µ—à—É –∑–∞ –∫–ª—é—á–µ–º.
     * @param {string} key - –ö–ª—é—á –∫–µ—à—É.
     * @returns {object|null} - –û–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏, –∞–±–æ null, —è–∫—â–æ –∫–µ—à –Ω–µ–¥—ñ–π—Å–Ω–∏–π.
     */
    function getTracksCache(key) {
        var cache = Lampa.Storage.get(LTF_CONFIG.CACHE_KEY) || {};
        var item = cache[key];
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –∑–∞–ø–∏—Å –Ü —á–∏ –≤—ñ–Ω –Ω–µ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏–π
        var isCacheValid = item && (Date.now() - item.timestamp < LTF_CONFIG.CACHE_VALID_TIME_MS);
        return isCacheValid ? item : null;
    }

    /**
     * –ó–±–µ—Ä—ñ–≥–∞—î –¥–∞–Ω—ñ –≤ –∫–µ—à.
     * @param {string} key - –ö–ª—é—á –∫–µ—à—É.
     * @param {object} data - –î–∞–Ω—ñ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è (—Ç—ñ–ª—å–∫–∏ track_count).
     */
    function saveTracksCache(key, data) {
        var cache = Lampa.Storage.get(LTF_CONFIG.CACHE_KEY) || {};
        cache[key] = {
            track_count: data.track_count,
            timestamp: Date.now() // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å
        };
        Lampa.Storage.set(LTF_CONFIG.CACHE_KEY, cache);
    }
    
// ===================== –û–ù–û–í–õ–ï–ù–ù–Ø –Ü–ù–¢–ï–†–§–ï–ô–°–£ (UI) =====================
/**
 * –ú–∞–ª—é—î, –æ–Ω–æ–≤–ª—é—î –∞–±–æ –≤–∏–¥–∞–ª—è—î –º—ñ—Ç–∫—É –Ω–∞ –∫–∞—Ä—Ç—Ü—ñ.
 * @param {HTMLElement} cardView - DOM-–µ–ª–µ–º–µ–Ω—Ç .card__view.
 * @param {number} trackCount - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ—Ä—ñ–∂–æ–∫ (0, 1, 2...).
 */
function updateCardListTracksElement(cardView, trackCount) {
    // –û—Ç—Ä–∏–º—É—î–º–æ HTML-—Ä—è–¥–æ–∫ –¥–ª—è –º—ñ—Ç–∫–∏ (–∞–±–æ null)
    const displayLabel = formatTrackLabel(trackCount); 
    const existingElement = cardView.querySelector('.card__tracks');
    
    // --- –õ–æ–≥—ñ–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è ---
    // –Ø–∫—â–æ –º—ñ—Ç–∫–∏ –Ω–µ –º–∞—î –±—É—Ç–∏ (displayLabel=null), –∞ –≤–æ–Ω–∞ —î - –≤–∏–¥–∞–ª—è—î–º–æ.
    if (!displayLabel) {
        if (existingElement) existingElement.remove();
        return;
    }
    
    // --- –õ–æ–≥—ñ–∫–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó ---
    // –Ø–∫—â–æ –º—ñ—Ç–∫–∞ –≤–∂–µ —î —ñ —ó—ó –í–ú–Ü–°–¢ —Ç–æ–π —Å–∞–º–∏–π - –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ.
    // ‚ùó –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ .innerHTML, –±–æ –º–∏ –ø–æ—Ä—ñ–≤–Ω—é—î–º–æ SVG-—Ä—è–¥–∫–∏.
    if (existingElement && existingElement.innerHTML === displayLabel) {
        return;
    }
    
    // --- –õ–æ–≥—ñ–∫–∞ –º–∞–ª—é–≤–∞–Ω–Ω—è/–æ–Ω–æ–≤–ª–µ–Ω–Ω—è ---
    // –í —ñ–Ω—à–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö - –≤–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä—É (—è–∫—â–æ —î) —ñ –º–∞–ª—é—î–º–æ –Ω–æ–≤—É.
    if (existingElement) existingElement.remove();
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏
    const trackDiv = document.createElement('div');
    trackDiv.className = 'card__tracks';

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ RatingUp
    const parentCard = cardView.closest('.card');
    if (parentCard) {
        const voteElement = parentCard.querySelector('.card__vote');
        if (voteElement) {
             const topStyle = getComputedStyle(voteElement).top;
             // –Ø–∫—â–æ 'top' < 100px - –∑–Ω–∞—á–∏—Ç—å, —Ä–µ–π—Ç–∏–Ω–≥ —É –≤–µ—Ä—Ö–Ω—å–æ–º—É –∫—É—Ç—ñ.
             if (topStyle !== 'auto' && parseInt(topStyle) < 100) {
                 trackDiv.classList.add('positioned-below-rating'); // –ó–º—ñ—â—É—î–º–æ –Ω–∞—à—É –º—ñ—Ç–∫—É
             }
        }
    }
    
    // ‚ùó –í–∞–∂–ª–∏–≤–æ: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ innerHTML, —â–æ–± SVG –∫–æ—Ä–µ–∫—Ç–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏–≤—Å—è —è–∫ HTML,
    // –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —è–∫ —Ç–µ–∫—Å—Ç.
    const innerElement = document.createElement('div');
    innerElement.innerHTML = displayLabel;
    
    // –î–æ–¥–∞—î–º–æ –≤ DOM
    trackDiv.appendChild(innerElement);
    cardView.appendChild(trackDiv);
}
    // ===================== –ì–û–õ–û–í–ù–ò–ô –û–ë–†–û–ë–ù–ò–ö –ö–ê–†–¢–û–ö =====================
    /**
     * üü© –Ü–î–ï–ú–ü–û–¢–ï–ù–¢–ù–ê –õ–û–ì–Ü–ö–ê
     * –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –º–æ–∂–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏—Å—å –¥–ª—è –æ–¥–Ω—ñ—î—ó –∫–∞—Ä—Ç–∫–∏ –±–∞–≥–∞—Ç–æ —Ä–∞–∑—ñ–≤ (–¥—è–∫—É—é—á–∏ MutationObserver).
     * –í–æ–Ω–∞ —Å–∞–º–∞ –≤–∏—Ä—ñ—à—É—î, —â–æ —Ä–æ–±–∏—Ç–∏, –±–∞–∑—É—é—á–∏—Å—å –Ω–∞ —Å—Ç–∞–Ω—ñ –∫–µ—à—É.
     * 1. –ù–µ–º–∞—î –∫–µ—à—É? -> –†–æ–±–∏–º–æ –ø–æ—à—É–∫, –º–∞–ª—é—î–º–æ, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ.
     * 2. –ö–µ—à —Å–≤—ñ–∂–∏–π (0-6 –≥–æ–¥–∏–Ω)? -> –ü—Ä–æ—Å—Ç–æ –º–∞–ª—é—î–º–æ –∑ –∫–µ—à—É. (–¶–µ "–∞–≤—Ç–æ–∑—Ü—ñ–ª–µ–Ω–Ω—è", —è–∫—â–æ DOM –æ–Ω–æ–≤–∏–≤—Å—è).
     * 3. –ö–µ—à –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π (6-12 –≥–æ–¥–∏–Ω)? -> –ú–∞–ª—é—î–º–æ –∑ –∫–µ—à—É + –∑–∞–ø—É—Å–∫–∞—î–º–æ —Ñ–æ–Ω–æ–≤–∏–π –ø–æ—à—É–∫. (–¶–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è "–ø—Ä–∏–º–∞—Ä").
     */
    function processListCard(cardElement) {
        // --- –ë–∞–∑–æ–≤—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ ---
        // –ö–∞—Ä—Ç–∫–∞ —â–µ —ñ—Å–Ω—É—î –≤ DOM?
        if (!cardElement || !cardElement.isConnected || !document.body.contains(cardElement)) {
            return;
        }
        // –£ –∫–∞—Ä—Ç–∫–∏ —î –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ?
        var cardData = cardElement.card_data;
        var cardView = cardElement.querySelector('.card__view');
        if (!cardData || !cardView) return;

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è: —á–∏ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –¥–ª—è —Å–µ—Ä—ñ–∞–ª—ñ–≤
        var isTvSeries = (getCardType(cardData) === 'tv');
        if (isTvSeries && !LTF_CONFIG.SHOW_TRACKS_FOR_TV_SERIES) return;

        // --- –ù–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö ---
        // –ó–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ –≤ —î–¥–∏–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç
        var normalizedCard = {
            id: cardData.id || '',
            title: cardData.title || cardData.name || '',
            original_title: cardData.original_title || cardData.original_name || '',
            type: getCardType(cardData),
            release_date: cardData.release_date || cardData.first_air_date || ''
        };
        var cardId = normalizedCard.id;
        var cacheKey = `${LTF_CONFIG.CACHE_VERSION}_${normalizedCard.type}_${cardId}`;

        // --- 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä—É—á–Ω–∏—Ö –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω—å (–º–∞—é—Ç—å –Ω–∞–π–≤–∏—â–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç) ---
        var manualOverrideData = LTF_CONFIG.MANUAL_OVERRIDES[cardId];
        if (manualOverrideData) {
            if (LTF_CONFIG.LOGGING_TRACKS) console.log(`LTF-LOG [${cardId}]: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —Ä—É—á–Ω–µ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è:`, manualOverrideData);
            // –ú–∞–ª—é—î–º–æ –º—ñ—Ç–∫—É –∑–≥—ñ–¥–Ω–æ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è
            updateCardListTracksElement(cardView, manualOverrideData.track_count);
            return; // –ù–µ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –æ–±—Ä–æ–±–∫—É
        }

        // --- 2. –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ –∫–µ—à—É ---
        var cachedData = getTracksCache(cacheKey);

        // --- 3. –í–∏—Ä—ñ—à—É—î–º–æ, —â–æ —Ä–æ–±–∏—Ç–∏ (–û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞) ---
        if (cachedData) {
            // --- –ö–ï–® –Ü–°–ù–£–Ñ ---
            
            // 3a. –ú–∞–ª—é—î–º–æ –º—ñ—Ç–∫—É –∑ –∫–µ—à—É.
            // –¶–µ —ñ —î "–∞–≤—Ç–æ–∑—Ü—ñ–ª–µ–Ω–Ω—è": —è–∫—â–æ Lampa –ø–µ—Ä–µ–º–∞–ª—é–≤–∞–ª–∞ –∫–∞—Ä—Ç–∫—É —ñ –º—ñ—Ç–∫–∞ –∑–Ω–∏–∫–ª–∞,
            // —Ü–µ–π –∫–æ–¥ –º–∏—Ç—Ç—î–≤–æ —ó—ó –≤—ñ–¥–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –≤–∏–∫–ª–∏–∫—É.
            updateCardListTracksElement(cardView, cachedData.track_count);
            
            // 3b. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ —á–∞—Å –æ–Ω–æ–≤–∏—Ç–∏ –∫–µ—à —É —Ñ–æ–Ω—ñ.
            // –¶–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è "–ø—Ä–∏–º–∞—Ä": —è–∫—â–æ –≤ –∫–µ—à—ñ —Ö–∏–±–Ω–∏–π '1', –∞ –Ω–∞—Å–ø—Ä–∞–≤–¥—ñ '0',
            // —Ü–µ–π –∫–æ–¥ –æ–Ω–æ–≤–∏—Ç—å –∫–µ—à —ñ –ø—Ä–∏–±–µ—Ä–µ –º—ñ—Ç–∫—É.
            if (Date.now() - cachedData.timestamp > LTF_CONFIG.CACHE_REFRESH_THRESHOLD_MS) {
                if (LTF_CONFIG.LOGGING_TRACKS) console.log(`LTF-LOG [${cardId}]: –ö–µ—à –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π, —Ñ–æ–Ω–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...`);
                
                getBestReleaseWithUkr(normalizedCard, cardId, function(liveResult) {
                    let trackCount = liveResult ? liveResult.track_count : 0;
                    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à –Ω–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
                    saveTracksCache(cacheKey, { track_count: trackCount });
                    
                    // –û–Ω–æ–≤–ª—é—î–º–æ UI, –ª–∏—à–µ —è–∫—â–æ –∫–∞—Ä—Ç–∫–∞ —â–µ —ñ—Å–Ω—É—î –Ω–∞ –µ–∫—Ä–∞–Ω—ñ
                    if (document.body.contains(cardElement)) {
                        updateCardListTracksElement(cardView, trackCount);
                    }
                });
            }
        } else {
            // --- –ö–ï–®–£ –ù–ï–ú–ê–Ñ (–∞–±–æ –≤—ñ–Ω –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏–π > 12 –≥–æ–¥–∏–Ω) ---
            if (LTF_CONFIG.LOGGING_TRACKS) console.log(`LTF-LOG [${cardId}]: –ö–µ—à –≤—ñ–¥—Å—É—Ç–Ω—ñ–π, –Ω–æ–≤–∏–π –ø–æ—à—É–∫...`);
            
            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤–Ω–∏–π –ø–æ—à—É–∫
            getBestReleaseWithUkr(normalizedCard, cardId, function(liveResult) {
                let trackCount = liveResult ? liveResult.track_count : 0;
                // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–µ—à
                saveTracksCache(cacheKey, { track_count: trackCount });
                
                if (document.body.contains(cardElement)) {
                    updateCardListTracksElement(cardView, trackCount);
                }
            });
        }
    }
    
    // ===================== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –ü–õ–ê–ì–Ü–ù–ê =====================
    
    // --- –õ–æ–≥—ñ–∫–∞ –î–µ–±–∞—É–Ω—Å–∏–Ω–≥—É —Ç–∞ –ü–∞–∫–µ—Ç–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ ---
    // –¶–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, —â–æ–± –Ω–µ –æ–±—Ä–æ–±–ª—è—Ç–∏ –∫–æ–∂–Ω—É –∫–∞—Ä—Ç–∫—É –æ–∫—Ä–µ–º–æ, 
    // –∞ –∑–±–∏—Ä–∞—Ç–∏ —ó—Ö —É "–ø–∞—á–∫—É" —ñ –æ–±—Ä–æ–±–ª—è—Ç–∏ —Ä–∞–∑–æ–º.
    
    var observerDebounceTimer = null; // –¢–∞–π–º–µ—Ä –¥–ª—è –∑–∞—Ç—Ä–∏–º–∫–∏.
    var cardsToProcess = []; // –ú–∞—Å–∏–≤ –¥–ª—è –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–∞—Ä—Ç–æ–∫.

    /**
     * –ó–∞–ø—É—Å–∫–∞—î –æ–±—Ä–æ–±–∫—É –Ω–∞–∫–æ–ø–∏—á–µ–Ω–∏—Ö –∫–∞—Ä—Ç–æ–∫ —ñ–∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é.
     */
    function debouncedProcessCards() {
        clearTimeout(observerDebounceTimer); // –°–∫–∏–¥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–µ—Ä.
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤–∏–π —Ç–∞–π–º–µ—Ä. –û–±—Ä–æ–±–∫–∞ –ø–æ—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ 150 –º—Å
        // –ø—ñ—Å–ª—è –û–°–¢–ê–ù–ù–¨–û–ì–û –≤–∏—è–≤–ª–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫–∞—Ä—Ç–∫–∏.
        observerDebounceTimer = setTimeout(function() {
            // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Set, —â–æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –¥—É–±–ª—ñ–∫–∞—Ç–∏ –∫–∞—Ä—Ç–æ–∫,
            // —è–∫—ñ –º–æ–≥–ª–∏ –±—É—Ç–∏ –¥–æ–¥–∞–Ω—ñ –∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤.
            const batch = [...new Set(cardsToProcess)]; 
            cardsToProcess = []; // –û—á–∏—â—É—î–º–æ –¥–ª—è –Ω–æ–≤–∏—Ö –∫–∞—Ä—Ç–æ–∫
            
            if (LTF_CONFIG.LOGGING_CARDLIST) console.log("LTF-LOG: –û–±—Ä–æ–±–∫–∞ –ø–∞—á–∫–∏ –∑", batch.length, "–∫–∞—Ä—Ç–æ–∫.");

            // –†–æ–∑–±–∏–≤–∞—î–º–æ –≤–µ–ª–∏–∫—É –ø–∞—á–∫—É –Ω–∞ –º–∞–ª–µ–Ω—å–∫—ñ "–ø–∞–∫–µ—Ç–∏" (chunks),
            // —â–æ–± –Ω–µ –±–ª–æ–∫—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å Lampa.
            var BATCH_SIZE = 12; // –û–±—Ä–æ–±–ª—è—Ç–∏ –ø–æ 12 –∫–∞—Ä—Ç–æ–∫ –∑–∞ —Ä–∞–∑
            var DELAY_MS = 30;   // –ó–∞—Ç—Ä–∏–º–∫–∞ 30ms –º—ñ–∂ –ø–∞–∫–µ—Ç–∞–º–∏

            /**
             * –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –ø–∞–∫–µ—Ç—ñ–≤ –∫–∞—Ä—Ç–æ–∫
             * @param {number} startIndex - –Ü–Ω–¥–µ–∫—Å –ø–æ—á–∞—Ç–∫—É –ø–æ—Ç–æ—á–Ω–æ–≥–æ –ø–∞–∫–µ—Ç—É
             */
            function processBatch(startIndex) {
                // –ë–µ—Ä–µ–º–æ "—à–º–∞—Ç–æ–∫" –ø–∞—á–∫–∏
                var currentBatch = batch.slice(startIndex, startIndex + BATCH_SIZE);
                
                // –û–±—Ä–æ–±–ª—è—î–º–æ –∫–æ–∂–Ω—É –∫–∞—Ä—Ç–∫—É –∑ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –ø–∞–∫–µ—Ç—É
                currentBatch.forEach(card => {
                    if (card.isConnected && document.body.contains(card)) {
                        processListCard(card);
                    }
                });
                
                var nextIndex = startIndex + BATCH_SIZE;
                // –Ø–∫—â–æ –∑–∞–ª–∏—à–∏–ª–∏—Å—è –∫–∞—Ä—Ç–∫–∏ - –ø–ª–∞–Ω—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –ø–∞–∫–µ—Ç
                if (nextIndex < batch.length) {
                    setTimeout(function() {
                        processBatch(nextIndex);
                    }, DELAY_MS);
                }
            }
            
            // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–∞–∫–µ—Ç–Ω—É –æ–±—Ä–æ–±–∫—É
            if (batch.length > 0) {
                processBatch(0);
            }
            
        }, 150); // –ó–∞—Ç—Ä–∏–º–∫–∞ –≤ 150 –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥.
    }

    // MutationObserver - "–æ–∫–æ", —è–∫–µ —Å–ª—ñ–¥–∫—É—î –∑–∞ –ø–æ—è–≤–æ—é –Ω–æ–≤–∏—Ö –∫–∞—Ä—Ç–æ–∫ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.
    var observer = new MutationObserver(function(mutations) {
        let newCardsFound = false;
        mutations.forEach(function(mutation) {
            // –ù–∞—Å —Ü—ñ–∫–∞–≤–ª—è—Ç—å —Ç—ñ–ª—å–∫–∏ –î–û–î–ê–ù–Ü –≤—É–∑–ª–∏
            if (mutation.addedNodes) {
                mutation.addedNodes.forEach(function(node) {
                    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –µ–ª–µ–º–µ–Ω—Ç (–∞ –Ω–µ —Ç–µ–∫—Å—Ç)
                    if (node.nodeType === 1) { 
                        // –Ø–∫—â–æ —Ü–µ —Å–∞–º–∞ –∫–∞—Ä—Ç–∫–∞
                        if (node.classList && node.classList.contains('card')) {
                            cardsToProcess.push(node); // –î–æ–¥–∞—î–º–æ –∫–∞—Ä—Ç–∫—É –≤ –º–∞—Å–∏–≤ –¥–ª—è –æ–±—Ä–æ–±–∫–∏.
                            newCardsFound = true;
                        }
                        // –ê–±–æ —è–∫—â–æ —Ü–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —è–∫–æ–≥–æ —î –∫–∞—Ä—Ç–∫–∏
                        const nestedCards = node.querySelectorAll('.card');
                        if (nestedCards.length) {
                           nestedCards.forEach(card => cardsToProcess.push(card));
                           newCardsFound = true;
                        }
                    }
                });
            }
        });
        
        // –Ø–∫—â–æ –±—É–ª–∏ –¥–æ–¥–∞–Ω—ñ –Ω–æ–≤—ñ –∫–∞—Ä—Ç–∫–∏, –∑–∞–ø—É—Å–∫–∞—î–º–æ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω—É –æ–±—Ä–æ–±–∫—É.
        if (newCardsFound) {
            debouncedProcessCards();
        }
    });

    /**
     * –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó, —è–∫–∞ –∑–∞–ø—É—Å–∫–∞—î –≤–µ—Å—å –º–µ—Ö–∞–Ω—ñ–∑–º.
     */
    function initializeLampaTracksPlugin() {
        // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω—ñ–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó.
        if (window.lampaTrackFinderPlugin) return;
        window.lampaTrackFinderPlugin = true;

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á DOM.
        // –ú–∏ —Å–ª—É—Ö–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏, –¥–µ Lampa –º–∞–ª—é—î –∫–∞—Ä—Ç–∫–∏.
        var containers = document.querySelectorAll('.cards, .card-list, .content, .main, .cards-list, .preview__list');
        if (containers.length) {
            containers.forEach(container => observer.observe(container, { childList: true, subtree: true }));
        } else {
            // –Ø–∫—â–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ —â–µ –Ω–µ –≥–æ—Ç–æ–≤—ñ, —Å–ª—É—Ö–∞—î–º–æ 'body'.
            observer.observe(document.body, { childList: true, subtree: true });
        }

        // ===============================================================
        // üü© –†–∞–∑–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–µ—à—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
        // –ú–∏—Ç—Ç—î–≤–æ –≤—ñ–¥–Ω–æ–≤–ª—é—î –º—ñ—Ç–∫–∏ –¥–ª—è –∫–∞—Ä—Ç–æ–∫, —â–æ –í–ñ–ï —î –Ω–∞ –µ–∫—Ä–∞–Ω—ñ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É Lampa,
        // –¥–æ —Ç–æ–≥–æ, —è–∫ MutationObserver –ø–æ—á–∞–≤ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏.
        // ===============================================================
        setTimeout(function () {
            const allCards = document.querySelectorAll('.card');
            if (LTF_CONFIG.LOGGING_GENERAL && allCards.length > 0) {
                 console.log(`UA-Finder: –†–∞–∑–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–µ—à—É –¥–ª—è ${allCards.length} –∫–∞—Ä—Ç–æ–∫...`);
            }
            allCards.forEach(card => {
                if (card.card_data && card.querySelector('.card__view')) {
                    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—É –∂ —Å–∞–º—É –≥–æ–ª–æ–≤–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é.
                    // –í–æ–Ω–∞ —Å–∞–º–∞ –≤—ñ–∑—å–º–µ –¥–∞–Ω—ñ –∑ –∫–µ—à—É —ñ –Ω–∞–º–∞–ª—é—î –º—ñ—Ç–∫—É.
                    processListCard(card);
                }
            });
        }, 1200); // –ß–µ—Ä–µ–∑ 1.2 —Å–µ–∫—É–Ω–¥–∏ –ø—ñ—Å–ª—è —Å—Ç–∞—Ä—Ç—É Lampa

        if (LTF_CONFIG.LOGGING_GENERAL) console.log("LTF-LOG: –ü–ª–∞–≥—ñ–Ω –ø–æ—à—É–∫—É —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –¥–æ—Ä—ñ–∂–æ–∫ (v3.3) —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ!");
    }

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é, –∫–æ–ª–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ (DOM) –±—É–¥–µ –≥–æ—Ç–æ–≤–∞.
    if (document.body) {
        initializeLampaTracksPlugin();
    } else {
        document.addEventListener('DOMContentLoaded', initializeLampaTracksPlugin);
    }
})();
